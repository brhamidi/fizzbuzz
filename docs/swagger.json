{
    "swagger": "2.0",
    "info": {
        "description": "This is a fizzbuz server with a statistic endpoint",
        "title": "Fizzbuzz Rest Server",
        "contact": {
            "name": "Brahim Hamidi",
            "email": "brahim.hamidi75@gmail.com"
        },
        "license": {
            "name": "GPL 3",
            "url": "https://www.gnu.org/licenses/quick-guide-gplv3.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "paths": {
        "/fizzbuzz": {
            "get": {
                "description": "Fizzbuzz operation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fizzbuzz Operation"
                ],
                "summary": "Return fizzbuzz result",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "int1 query parameter",
                        "name": "int1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "int2 query parameter",
                        "name": "int2",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit query parameter",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "str1 query parameter",
                        "name": "str1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "str2 query parameter",
                        "name": "str2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Healthcheck endpoint, to ensure that the service is running.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Returns the query that was performed the most and also the number of times",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic"
                ],
                "summary": "Retreive statistic regarding fizzbuzz request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseSuccess"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Reset all statistics regarding the queries made in the past",
                "tags": [
                    "Statistic"
                ],
                "summary": "Reset statistics",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Health": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "ResponseError": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                }
            }
        },
        "ResponseSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                }
            }
        }
    }
}